// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot 1`] = `
[
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "paddingTop": 20,
      }
    }
    testID="welcome"
  >
    <Text
      style={
        {
          "fontSize": 25,
          "marginBottom": 30,
        }
      }
    >
      Welcome
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="hello_button"
    >
      <Text
        style={
          {
            "color": "blue",
            "marginBottom": 20,
          }
        }
      >
        Say Hello
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="world_button"
    >
      <Text
        style={
          {
            "color": "blue",
            "marginBottom": 20,
          }
        }
      >
        Say World
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="goodbye_button"
    >
      <Text
        style={
          {
            "color": "blue",
            "marginBottom": 20,
            "marginTop": 50,
          }
        }
      >
        Say Goodbye
      </Text>
    </View>
  </View>,
  <Text>
    App dotenv: 
    test data
    try
  </Text>,
]
`;
